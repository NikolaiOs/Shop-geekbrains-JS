(()=>{"use strict";class t{constructor(t,e){this._text=t,this._callback=e}onButtonClick(){const t=this._callback;"function"==typeof t&&t()}getTemplate(){const t=document.createElement("button");return t.classList.add("btn"),t}render(t){if(t){const e=this.getTemplate();e.innerHTML=this._text,t.appendChild(e),e.addEventListener("click",(()=>{this.onButtonClick()}))}}}class e{constructor({name:t,price:e,img:n},i){this._name=t,this._price=e,this._img=n,this._cartElem=i}addToCart(){this._cartElem.add({img:this._img,name:this._name,price:this._price})}rendor(){const e=document.querySelector(".goods-list");if(e){const n=document.createElement("div");n.innerHTML=`\n      Товар: ${this._name} = ${this._price}\n      <img src="${this._img}"/>\n      `,new t("Купить",this.addToCart.bind(this)).render(n),e.appendChild(n)}}}class n{constructor({name:t,price:e,img:n}){this._name=t,this._price=e,this._img=n}render(){const t=document.querySelector(".cart"),e=document.createElement("div");e.classList.add("cart-items"),e.innerHTML=`<img src="${this._img}"> ${this._name} <p>Цена: ${this._price}</p>`,t.appendChild(e)}}const i=new class{constructor(){this.render()}add(t){this._cartItems.push(new n(t)),this.render()}render(){const t=document.querySelector(".cart");t&&(t.innerHTML='<h2 class="cart-title">Корзина</h2>'),this._cartItems.forEach((t=>{t.render()}))}};new class{constructor(t){this.fetchGoods().then((t=>t.json())).then((n=>{const i=n.data.map((n=>new e(n,t)));this._items=this._items.concat(i),this.rendor()}))}fetchGoods(){let t=`${document.location.protocol}//${document.location.host}/database/data.json`;return fetch(t)}rendor(){this._items.forEach((t=>{t.rendor()}))}}(i),new class{constructor(t){this._form=t,this.renderForm()}validation(t,e){switch(e){case"name":/^(\p{Alpha})+$/gu.test(t)?console.log("Name is valid!"):(alert("Имя содержит только буквы"),console.log("Name is not valid!"));break;case"phone":/^\+7\(\d{3}\)\d{3}-\d{4}$/g.test(t)?console.log("Phone is valid!"):(alert("Телефон имеет вид +7(000)000-0000"),console.log("Phone is not valid!"));break;case"email":/^([a-z0-9\.-]+)@([a-z0-9\.-]+)\.([a-z\.]{2,6})$/g.test(t)?console.log("Email is valid!"):(alert("E-mail имеет вид mymail@mail.ru, или my.mail@gmail.com"),console.log("Email is not valid!"))}}renderForm(){const t=document.querySelector(".feedBack");if(t){const e=document.createElement("h2");e.innerHTML='<h2 class="cart-title">Обратная связь</h2>',t.appendChild(e);const n=document.createElement("form");n.classList.add("feedBackForm"),n.setAttribute("action","#"),n.innerHTML=`\n         <p class="text-form">Имя: <input onchange="${this._form}.validation(this.value, 'name')" class="registration-form" type="text" name="login" placeholder="Коля" minlength="4" maxlength="35" required></p>\n         <p class="text-form">Телефон: <input onchange="${this._form}.validation(this.value, 'phone')" class="registration-form" type="tel" name="tel" placeholder="+7(444)333-2222" minlength="12" maxlength="35" required></p>\n         <p class="text-form">Введите почту: <input onchange="${this._form}.validation(this.value, 'email')" class="registration-form" type="text" placeholder="Email" minlength="11" maxlength="35" required></p>\n         <p><input type="submit" value="Отправить"></p>\n      `,t.appendChild(n)}}}("feedBack")})();